generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  binaryTargets   = ["native", "linux-musl"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [uuid_ossp(map: "uuid-ossp")]
}

model Drink {
  id          String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String             @db.VarChar
  icon        String             @db.VarChar
  userId      String?            @map("user_id") @db.VarChar
  createdAt   DateTime           @unique @default(now()) @map("created_at") @db.Timestamp(6)
  deleted     DateTime?
  upc         String?            @unique @db.VarChar(12)
  ingredients DrinkIngredients[]
  user        User?              @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  entries     Entry[]
  nutrition   Nutrition?

  @@unique([id, name])
  @@unique([id, userId])
  @@unique([name, userId])
  @@index([name])
  @@index([createdAt])
  @@index([id, userId])
  @@map("drinks")
}

model Nutrition {
  coefficient   Float?   @default(100)

  servingSize   Float    @map("serving_size")
  servingUnit   String   @map("serving_unit")

  metricSize    Int      @map("metric_size")
  imperialSize  Int      @map("imperial_size")

  calories      Float?   @default(0)

  saturatedFat  Float?   @map("saturated_fat") @default(0)
  totalFat      Float?   @map("total_fat") @default(0)
  cholesterol   Float?   @default(0)
  sodium        Float?   @default(0)
  carbohydrates Float?   @default(0)
  fiber         Float?   @default(0)
  sugar         Float?   @default(0)
  addedSugar    Float?   @default(0) @map("added_sugar")
  protein       Float?   @default(0)
  potassium     Float?   @default(0)

  caffeine      Float?   @default(0)

  drinkId       String   @map("drink_id") @db.Uuid @unique
  drink         Drink   @relation(fields: [drinkId], references: [id], onDelete: Cascade)

  @@map("nutrition")
}

model Ingredient {
  id      String             @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  parts   Float?
  drinkId String             @map("drink_id") @db.Uuid
  volume  Float?
  drink   DrinkIngredients[]

  @@map("ingredients")
}

model DrinkIngredients {
  ingredientId String     @map("ingredient_id") @db.Uuid
  drinkId      String     @map("drink_id") @db.Uuid
  drink        Drink      @relation(fields: [drinkId], references: [id], onDelete: Cascade)
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id], onDelete: Cascade)

  @@id([drinkId, ingredientId])
  @@map("drink_ingredients")
}

model Entry {
  id        String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  volume    Float
  timestamp DateTime @unique @default(now()) @db.Timestamp(6)

  drinkId   String   @map("drink_id") @db.Uuid
  drink     Drink    @relation(fields: [drinkId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  userId    String   @map("user_id") @db.VarChar
  user      User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  deleted   Boolean  @default(false)

  @@unique([volume, id])
  @@unique([drinkId, id])
  @@unique([id, userId])
  @@unique([timestamp, userId])
  @@map("entries")
}

model User {
  id      String  @id @db.VarChar
  drinks  Drink[]
  entries Entry[]

  @@map("users")
}
