generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}

// model DrinkIngredients {
//   @@map("drink_ingredients")
//   ingredient_id String      @db.Uuid
//   drink_id      String      @db.Uuid

//   @@id([ingredient_id, drink_id], map: "PK_c048b9ac3d795348157465d6d00")
//   @@index([drink_id], map: "IDX_66315e6f682aee05c365e41278")
//   @@index([ingredient_id], map: "IDX_f84dce9c6655656142641c3e7b")
// }

model Drink {
  @@map("drinks")

  id                String              @id(map: "PK_c729b137d69b681e87798293e3f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name              String              @db.VarChar
  icon              String              @db.VarChar
  coefficient       Float?              @default(0)
  caffeine          Float?              @default(0)
  sugar             Float?              @default(0)
  userId            String?             @db.VarChar @map("user_id")
  ingredients       Ingredient[]        @relation("drink_ingredients")
  users             User?               @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_6879b539a0286b32fd4a6435eac")
  entries           Entry[]

  @@unique([name, userId], map: "UQ_ae9bee7d1c147b2012de6d6312a")
}

model Ingredient {
  @@map("ingredients")
  id                String           @id(map: "PK_9240185c8a5507251c9f15e0649") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  parts             Int
  drinkId           String           @map("drink_id") @db.Uuid
  drink             Drink[]          @relation("drink_ingredients")
}

model Entry {
  @@map("entries")
  id        String   @id(map: "PK_23d4e7e9b58d9939f113832915b") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  volume    Float
  timestamp DateTime @default(now()) @db.Timestamp(6)
  drinkId   String   @map("drink_id") @db.Uuid
  userId    String   @map("user_id") @db.VarChar
  users     User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_73b250bca5e5a24e1343da56168")
  drinks    Drink    @relation(fields: [drinkId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_d5131611d25aa299dc50551eb47")
}

model User {
  @@map("users")
  id      String    @id(map: "PK_a3ffb1c0c8416b9fc6f907b7433") @db.VarChar
  drinks  Drink[]
  entries Entry[]
}
